cmake_minimum_required(VERSION 2.8.3)
project(multiespectral_fb)

## Compile as C++11, supported in ROS Kinetic and newer
add_compile_options(-std=c++17)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS 
            nodelet
            pluginlib
            std_srvs
            actionlib_msgs
            roscpp
            actionlib
            sensor_msgs
            cv_bridge
            image_transport
            rviz
            message_generation
    )
find_package(Qt5 REQUIRED COMPONENTS Widgets) # rviz plugin for cameras :)

find_package(OpenCV REQUIRED)
find_package(pylon REQUIRED)
find_package(Spinnaker REQUIRED) # Makes use of FindSpinnaker.cmake in cmake fodler

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)

## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()


add_action_files(
  DIRECTORY action
  FILES MultiespectralAcquisition.action
)

generate_messages(
  DEPENDENCIES actionlib_msgs std_msgs  # Or other packages containing msgs
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if your package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  # INCLUDE_DIRS include
  # LIBRARIES multiespectral_plugin
  CATKIN_DEPENDS roscpp rviz nodelet pluginlib std_srvs actionlib_msgs message_runtime image_transport cv_bridge
  #  DEPENDS system_lib
)


###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(
# include
    ${catkin_INCLUDE_DIRS}
    ${CMAKE_CURRENT_BINARY_DIR}/devel/include # Explicit path to have generated messages
    ${OpenCV_INCLUDE_DIRS}
    ${SPINNAKER_INCLUDE_DIRS}
    ${Qt5Widgets_INCLUDE_DIRS}
    ${CMAKE_CURRENT_LIST_DIR}/pylon_gen
    ${CMAKE_CURRENT_LIST_DIR}/python_gui
)

## Declare a C++ library. This code needs to be generated by pylon!
add_library(BaslerCamera SHARED
  ${CMAKE_CURRENT_LIST_DIR}/pylon_gen/BaslerCameraCameraParams.cpp
  ${CMAKE_CURRENT_LIST_DIR}/pylon_gen/BaslerCameraEventParams.cpp
  ${CMAKE_CURRENT_LIST_DIR}/pylon_gen/BaslerCameraChunkDataParams.cpp
  ${CMAKE_CURRENT_LIST_DIR}/pylon_gen/BaslerCameraTLParams.cpp
  ${CMAKE_CURRENT_LIST_DIR}/pylon_gen/BaslerCameraStreamParams.cpp
)

target_link_libraries( BaslerCamera PUBLIC pylon::pylon )

## Add cmake target dependencies of the library
## as an example, code may need to be generated before libraries
## either from message generation or dynamic reconfigure
# add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})

## Declare a C++ executable
## With catkin_make all packages are built within a single CMake context
## The recommended prefix ensures that target names across packages don't collide


# Nodelet libraries
add_library(basler_nodelet_master src/multiespectral_fb_nodelet_master.cpp src/BaslerAdapter.cpp)
add_library(flir_nodelet_slave src/multiespectral_fb_nodelet_slave.cpp src/FlirAdapter.cpp)

# Target link libraries
target_link_libraries(basler_nodelet_master ${catkin_LIBRARIES} ${OpenCV_LIBS} BaslerCamera)
target_link_libraries(flir_nodelet_slave ${catkin_LIBRARIES} ${OpenCV_LIBS} pthread dl Spinnaker::Spinnaker)



install(PROGRAMS
   ${CMAKE_CURRENT_LIST_DIR}/python_gui/multiespectral_control.py
   ${CMAKE_CURRENT_LIST_DIR}/python_gui/FreqCounter.py  
   ${CMAKE_CURRENT_LIST_DIR}/python_gui/multiespectral_control.py  
   ${CMAKE_CURRENT_LIST_DIR}/python_gui/multiespectral_dummy_ac.py  
   ${CMAKE_CURRENT_LIST_DIR}/python_gui/multiespectral_ros_ac.py
   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)

install(DIRECTORY templates
  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}/templates
  FILES_MATCHING PATTERN "*.html"
)



#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables for installation
## See http://docs.ros.org/melodic/api/catkin/html/howto/format1/building_executables.html
# install(TARGETS ${PROJECT_NAME}_node
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark libraries for installation
## See http://docs.ros.org/melodic/api/catkin/html/howto/format1/building_libraries.html
# install(TARGETS ${PROJECT_NAME}
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_GLOBAL_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_multiespectral_fb.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
